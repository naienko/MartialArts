@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model MartialArts.Models.Student

@{
    ViewData["Title"] = "Details";
}

<h1>
    @Html.DisplayFor(model => model.FullName)
    @if (Model.Active == false)
    {
        <text>(inactive)</text>
    }
</h1>
<h4>@Html.DisplayFor(model => model.InternalRank.Name)</h4>
<hr />

<div class="col-6">
    <div>
        <div class="d-flex justify-content-between">
            <div>
                <h3>Personal Details</h3>
            </div>
            <div>
                @if (SignInManager.IsSignedIn(User))
                {
                    <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                }
            </div>
        </div>
        <dl class="row">
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Address)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Address)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Phone)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Phone)
            </dd>
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.Email)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.Email)
            </dd>
        </dl>
    </div>
    <hr />
    <div>
        <div class="d-flex justify-content-between">
            <div>
                <h3>Arts</h3>
            </div>
            <div>
                @if (SignInManager.IsSignedIn(User))
                {
                    <a class="btn btn-warning btn-sm" asp-action="AddNewStyle" asp-route-id="@Model.Id">Add New Style</a>
                }
            </div>
        </div>
        @foreach (var item in Model.Styles)
        {
            <hr />
            <dl class="row">
                <dt class="col-sm-4">
                    @Html.DisplayFor(model => item.Style.Name)
                </dt>
                <dd class="col-sm-6">
                    @Html.DisplayFor(model => item.Rank.Name)
                </dd>
                <dt class="col-sm-4">
                    Last Testing Date
                </dt>
                @{List<attendance_test> ThisStyle = new List<attendance_test>();

                    foreach (var TestEvent in Model.Attendance_Test)
                    {
                        foreach (var StyleItem in TestEvent.Event.Style)
                        {
                            if (StyleItem.StyleId == item.Style.Id)
                            {
                                ThisStyle.Add(TestEvent);
                            }
                        }
                    }

                    var LastTestEvent = ThisStyle.OrderByDescending(t => t.Event.StartTime).FirstOrDefault();

                    <text>
                        <dd class="col-sm-6">@Html.DisplayFor(model => ThisStyle.OrderByDescending(t => t.Event.StartTime).FirstOrDefault().Event.StartTime)</dd>
                        <dt class="col-sm-4">
                            Suggested Next Testing
                        </dt>
                    </text>
                    if (LastTestEvent != null)
                    {
                        var actualDate = LastTestEvent.Event.StartTime;
                        string[] splitWaitTime = item.Rank.TimeInRank.Split(' ');

                        if (splitWaitTime[0] == "0")
                        {
                            <dd class="col-sm-6">n/a</dd>
                        }
                        else
                        {
                            if (splitWaitTime[1].Contains("month"))
                            {
                                <dd class="col-sm-6">@actualDate.AddMonths(Int32.Parse(splitWaitTime[0])).ToShortDateString()</dd>
                            }
                            else if (splitWaitTime[1].Contains("year"))
                            {
                                <dd class="col-sm-6">@actualDate.AddYears(Int32.Parse(splitWaitTime[0])).ToShortDateString()</dd>
                            }
                            else if (splitWaitTime[1].Contains("day"))
                            {
                                <dd class="col-sm-6">@actualDate.AddDays(Int32.Parse(splitWaitTime[0])).ToShortDateString()</dd>
                            }
                        }
                    }
                    else
                    {
                        <dd class="col-sm-6">n/a</dd>
                    }
                }
            </dl>
            <div class="d-flex justify-content-end mb-2">
                <div>

            @if (SignInManager.IsSignedIn(User))
            {
                <a class="btn btn-warning btn-sm" asp-action="EditRankAndForms" asp-route-StudentId="@Model.Id" asp-route-StyleId="@item.Style.Id">Edit Rank or Forms Known</a>
            }
                </div>
            </div>
            <div class="row">
                @foreach (var form in Model.Forms.Where(f => f.Form.StyleId == item.Style.Id))
                {
                    <div class="col-sm-4">
                        <div class="card">
                            <div class="card-header">
                                @Html.DisplayFor(model => form.Form.Name)
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    <hr />
    <div>
        <h3>Dates</h3>
        <dl class="row">
            <dt class="col-sm-4">
                @Html.DisplayNameFor(model => model.FirstClass)
            </dt>
            <dd class="col-sm-6">
                @Html.DisplayFor(model => model.FirstClass)
            </dd>
        </dl>
    </div>
    <hr />
    @if (SignInManager.IsSignedIn(User))
    {
        <div>
            <a asp-action="ActivityChange" asp-route-id="@Model.Id" class="btn btn-danger">
                @if (Model.Active == true)
                {
                    <text>Make Inactive</text>
                }
                else
                {
                    <text>Make Active</text>
                }
            </a> | <a asp-action="SchoolRankChange" asp-route-id="@Model.Id" class="btn btn-info">Change School Rank</a>
        </div>
    }
</div>
<div class="mt-4">
    <a asp-action="Index">Back to List</a>
</div>
